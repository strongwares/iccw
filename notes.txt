Mon: 12/12/2016

downloaded webstorm:
dana@optiPlex-780-1-ubuntu:~/projects/iccr/iccr$ mkdir webstorm
dana@optiPlex-780-1-ubuntu:~/projects/iccr/iccr$ cd webstorm/
dana@optiPlex-780-1-ubuntu:~/projects/iccr/iccr/webstorm$ mv ~/Downloads/WebStorm-2016.3.1.tar.gz .




SenchaCmd:
download from http://cdn.sencha.com/cmd/6.2.1/no-jre/SenchaCmd-6.2.1-osx-no_jre.app.zip
~/senchacmd/
run installer from inside of there

extjs 6:
download from: http://mailer.sencha.com/G6E0Sb10Zqx9W0zd01003kR
unzip to ~/extjs
ls ~/extjs/ext-6.2.0/

Setup extjs on already existing 

~/projects/extjs$ mkdir iccw
~/projects/extjs$ cd iccw

sencha -sdk $EXTJS_SDK generate app icc

or

after checking out iccw on new box that has extjs sdk and sencha, to set the ext folder inside the app:
~/projects/iccw $ sencha app upgrade ~/extjs/ext-6.2.0

sencha app watch

navigate to http://localhost:1841


--------------
Mon: 12/19/2016

classic:
Filled out classic main layout

modern:

--------------
Tue: 12/20/2016

Do login in login controller
- fires getIotaStatus event
- listens for responses

not working:
x Added app/util/Util.js
x Added app/util/Constant.js

global app controller:
Added app/controller/Global.js
- listens for events
- fires responses


sencha app build  production

ls build/production/icc/
archive  cache.appcache  classic  classic.json  classic.jsonp  index.html  microloader.jsp  modern  modern.json  modern.jsonp  resources

du -sh build/production/icc
9.8M	build/production/icc

how to package into iccr:


~/projects/extjs/iccw$ ls build/production/icc
archive  cache.appcache  classic  classic.json  classic.jsonp  index.html  microloader.jsp  modern  modern.json  modern.jsonp  resources

dirs:
archive
classic
modern
resources

release it:
~/projects/extjs/iccw$ sencha app build  production

~/projects/extjs/iccw$ cp -r build/production/icc /opt/iccr/lib

in iccr/deploy-iccr.bash

----------
Fri: 12/23/2016

Make C main layout be responsive



Global:
nbrStore
- nbrModel

C:
Neighbor table:
d grid
- grid editable requiredd

M:
Layout
Use FontAwesome on tabs
Neighbor table:
grid
config tab

--------
Sat: 12/24/2016

Put key in local storage, first check local storage, if there, go direct to main

Fire show hide events for all app view states to facilitate M panel views/hides

Hook up all button and label text to data bindings from view model:
Nbr
SvrAction

M: connected and milestone status bar at top of each panel

M: console log panel and grid
C: console log panel

d layout is broken: nbr bottom button bar duplicates, console log grid duplicates

--------------
Sun: 12/25/2016

Fixed layout by making main a border layout

Put Interior of main in border

Fixed vert expansion of nbr, svraction, and log panel

Fixed nbr panel bottom button bar expansion

Fixed nbr panel grid by making nbr view just the grid and the bottom btn bar into another xtype

Nbr model
Nbr store

On login attempt: getLangChoices

C On nbr panel launch => getNeighborProperties

C Nbr ctlr listens for get nbr prop results

C Login ctlr listen for all events

checked in

Log model
Log store

M Login ctlr listen for all events

M Nbr ctlr listens for get nbr prop results
C Nbr ctlr listens for get nbr prop results
M On nbr panel launch => getNeighborProperties

sencha app build  production

cp -r build/production/icc /opt/iccr/lib

----------
Mon: 12/26/2016

on mac

C:
Fixed nbr store references
test adding nbr to store
enable save btn on add

M Fixed nbr store references
enable save btn on add
fix adding nbr to store

checked in

C handle get nbr properties
M handle get nbr properties

Dropped using cached apikey in local storage, force login each time

checked in

------------
Tue: 12/27/2016

on ubuntu

Handle login fail


C Log grid
M Log grid
C Log display events
M Log ctlr listen for all events
M Log display events

fix M log grid cell colors

todo:

C edittble nbr addres
C edittble nbr descr
M edittble nbr addres
M edittble nbr descr

C hook up nbrbtn panel events to add, remove, save nbrs

C Svr Action: iccr Properties
M Svr Action: iccr Properties

C Svr Action: iota log window
M Svr Action: iota log window

Sequence:
on connectsucces => show lang choice => getLangChoiceProps 

Make footer an xtype and listen

C Fix black background on console log
?- log line store
?- log line model

C: on icc settings click handler

Put menu bar at top with title centered
Put help and about

Localization:
First connect be get supported languages, or put that on url (/icc/{lang})
Second load be lang localization strings
iccr:
- new iccw prop file
- new api for supported languages
- new api for localization kv pairs
global localization  model is key => value
globl localization store

Add 20x20 favicon

Login -> getNeighborConfig -> getIotaStatus

Make the classic login button be default

Add iccw lang localization properties files to iccr and deliver lang text from iccr to iccw

Have a guided tour of classic features using that tour lib from esci

x Make login just have key icon, no text to clue


git init
 2032  git status
 2033  ls classic
 2034  ls classic/src/
 2035  ls classic/src/view/
 2036  git add app.js app.json app bootstrap.css bootstrap.js build.xml classic.json classic.jsonp classic index.html modern.json modern.jsonp modern resources/ sass/ workspace.json 
 2037  git commit -m "initial commit"
 2038  git remote add github https://github.com/strongwares/iccw.git
 2039  git remove -v
 2040  git remote -v
 2041  git push -u origin master
 2042  git push github master
 2043  git pull
 2044  git push -f origin master
 2045  git pull
 2046  git pull github https://github.com/strongwares/iccw.git
 2047  git pull https://github.com/strongwares/iccw.git
 2048  git push github master
 2049  git pull
 2050  git push -u origin master
 2051  git push -u github master
 2052  git pull


